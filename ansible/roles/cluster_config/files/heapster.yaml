apiVersion: v1
kind: ServiceAccount
metadata:
  name: heapster
  namespace: kube-system

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: heapster
rules:
  - apiGroups:
    - ""
    resources:
    - events
    - namespaces
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - get
    - list
    - watch
    - create
  - apiGroups:
    - extensions
    resources:
    - deployments
    resourceNames:
    - heapster
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - update

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: heapster
subjects:
  - kind: ServiceAccount
    name: heapster
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: heapster
  apiGroup: rbac.authorization.k8s.io

---

kind: Service
apiVersion: v1
metadata:
  name: heapster
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "Heapster"
spec:
  ports:
    - port: 80
      targetPort: 8082
  selector:
    app: heapster

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: heapster
  namespace: kube-system
  labels:
    app: heapster
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: heapster
  template:
    metadata:
      labels:
        app: heapster
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    spec:
      serviceAccountName: heapster
      containers:
        - image: k8s.gcr.io/heapster-amd64:v1.5.4
          name: heapster
          resources:
            limits:
              cpu: 600m
              memory: 400Mi
            requests:
              cpu: 300m
              memory: 200Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 5
          command:
            - /heapster
            - --source=kubernetes:https://kubernetes.default.svc.cluster.local?kubeletHttps=true&kubeletPort=10250&useServiceAccount=true&insecure=true

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: heapster
  namespace: kube-system
spec:
  podSelector:
    matchLabels:
      app: heapster
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: kube-system
      ports:
        - protocol: TCP
          port: 8082